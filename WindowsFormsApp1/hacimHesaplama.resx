<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>